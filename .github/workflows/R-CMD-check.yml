# Workflow derived from https://github.com/r-lib/actions/tree/master/examples
# Need help debugging build failures? 
# Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
  pull_request:

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.os }}

    strategy:
        matrix:
            # os: [ubuntu-latest, windows-latest, macOS-latest]
            os: [ubuntu-latest]

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck, BiocCheck

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: true
          # Bioconductor R CMD check flags
          _R_CHECK_FORCE_SUGGESTS_: true
          _R_CHECK_RD_LINE_WIDTHS_: true
          _R_CHECK_EXECUTABLES_: false
          _R_CHECK_EXECUTABLES_EXCLUSIONS_: false
          _R_CHECK_FF_DUP_: true
          _R_CHECK_VC_DIR_: true
          _R_CHECK_PKG_SIZES_: true
          _R_CHECK_PKG_SIZES_THRESHOLD_: 5
          _R_CHECK_REPLACING_IMPORTS_: true
          _R_CHECK_TIMINGS_: "0"
          _R_CHECK_INSTALL_DEPENDS_: true
          _R_CHECK_SUGGESTS_ONLY_: true
          _R_CHECK_NO_RECOMMENDED_: true
          _R_CHECK_CODE_ASSIGN_TO_GLOBALENV_: true
          _R_CHECK_CODE_ATTACH_: true
          _R_CHECK_CODE_DATA_INTO_GLOBALENV_: true
          _R_CHECK_DOT_FIRSTLIB_: true
          _R_CHECK_DEPRECATED_DEFUNCT_: true
          _R_CHECK_TOPLEVELFILES_: true
          _R_CHECK_LIMIT_CORES_: true
          _R_CHECK_CODE_USAGE_VIA_NAMESPACES_: true
          _R_CHECK_S3_METHODS_NOT_REGISTERED_: true
          _R_CHECK_OVERWRITE_REGISTERED_S3_METHODS_: true
          _R_S3_METHOD_LOOKUP_BASEENV_AFTER_GLOBALENV_: true
          _R_CHECK_TESTS_NLINES_: 20
          _R_CHECK_NATIVE_ROUTINE_REGISTRATION_: true
          _R_CHECK_NO_STOP_ON_TEST_ERROR_: true
          _R_CHECK_PRAGMAS_: true
          _R_CHECK_COMPILATION_FLAGS_: true
          _R_CHECK_R_DEPENDS_: "warn"
          _R_CHECK_SERIALIZATION_: true
          _R_CHECK_R_ON_PATH_: true
          _R_CHECK_PACKAGES_USED_IN_TESTS_USE_SUBDIRS_: true
          _R_CHECK_SHLIB_OPENMP_FLAGS_: true
          _R_CHECK_CONNECTIONS_LEFT_OPEN_: true
          _R_CHECK_FUTURE_FILE_TIMESTAMPS_: true
          _R_CHECK_LENGTH_1_CONDITION_ : package:_R_CHECK_PACKAGE_NAME_
          _R_CHECK_LENGTH_1_LOGIC2_: package:_R_CHECK_PACKAGE_NAME_
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--as-cran"), 
            error_on = "warning", check_dir = "check"
          )
        shell: Rscript {0}

      #- name: Run BiocCheck
      #  run: BiocCheck::BiocCheck(
      #        `quit-with-status`=TRUE,
      #        `no-check-R-ver`=TRUE,
      #        `no-check-bioc-help`=TRUE)
      #  shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
